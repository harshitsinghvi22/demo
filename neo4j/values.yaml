# Default values for Neo4j.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

name: neo4j-db

# The volumeClaimTemplates will provide stable storage using
# PersistentVolumes provisioned by a PersistentVolume Provisioner.
volumeClaimTemplates:
 storageClassName: fast
 selector: # adding a selector here ensures that we use only Persistent Volumes that have been created and labelled specifically for neo4j and prevents "helpful" systems creating new Persistent Volumes dynamically
 accessModes: ReadWriteOnce
 storage: 10Gi


# securityContext defines privilege and access control settings for a Pod
# or Container. Making sure that we dont run Neo4j as root user.
securityContext:
 runAsNonRoot: true
 runAsUser: 7474
 runAsGroup: 7474
 fsGroup: 7474


# Specs for the Neo4j docker image
image:
 imagePullPolicy: IfNotPresent
 customImage: "eu.gcr.io/neo4j-helm/neo4j-helm-chart:1613427365-4.3.0-drop02.0-enterprise"

config:
 dbms.default_database: neo4j #'$(echo "${DATABASE_NAME:-neo4j}")'

configImport: |
 # Bolt connector
 dbms.connector.bolt.enabled=true
 dbms.connector.bolt.tls_level=DISABLED
 dbms.connector.bolt.listen_address=:7687
 dbms.connector.bolt.advertised_address=:7687

 # HTTP Connector. There can be zero or one HTTP connectors.
 dbms.connector.http.enabled=true
 dbms.connector.http.listen_address=:7474
 dbms.connector.http.advertised_address=:7474

 # HTTPS Connector. There can be zero or one HTTPS connectors.
 dbms.connector.https.enabled=false
 dbms.connector.https.listen_address=:7473
 dbms.connector.https.advertised_address=:7473

# Readiness probes will send a kill signal to the container if
# it fails enough times.  It's therefore very important
# that initialDelaySeconds give the cluster time to form, because
# if readiness probes start immediately after container start,
# they may end up not forming quickly enough and getting killed.
readinessProbe:
  failureThreshold: 2
  timeoutSeconds: 2
  periodSeconds: 1

# Liveness probes are set to know when to restart a container
livenessProbe:
  failureThreshold: 30
  timeoutSeconds: 2
  periodSeconds: 20

# Startup probes are used to know when a container application has started.
# If such a probe is configured, it disables liveness and readiness checks until it succeeds
startupProbe:
 failureThreshold: 2000
 periodSeconds: 25


# Set the load balancer name
serviceName: neo4j-lb
